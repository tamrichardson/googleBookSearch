{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atric\\\\googleBookSearch\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      searchResults: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\"\n    };\n\n    this.loadBooks = () => {\n      API.getBooks().then(res => this.setState({\n        books: res.data,\n        title: \"\",\n        author: \"\",\n        synopsis: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      API.deleteBook(id).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.title) {\n        API.getGoogleSearch(this.state.title).then(res => {\n          this.setState({\n            searchResults: res.data.items\n          }, () => console.log(this.state.searchResults));\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.saveBook = (title, author, synopsis, image, link) => {\n      API.saveBook({\n        title,\n        author,\n        synopsis,\n        image,\n        link\n      }).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Find a Book\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      name: \"title\",\n      placeholder: \"Title (required)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormBtn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Search\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.state.searchResults.map(book => /*#__PURE__*/React.createElement(ListItem, {\n      key: book.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: book.volumeInfo.infoLink,\n      alt: \"link\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, book.volumeInfo.title, \" by \", book.volumeInfo.authors ? book.volumeInfo.authors[0] : \"No Author Available\")), /*#__PURE__*/React.createElement(SaveBtn, {\n      onClick: () => this.saveBook(book.volumeInfo.title, book.volumeInfo.authors, book.volumeInfo.description, book.volumeInfo.imageLinks.thumbnail, book.volumeInfo.infoLink),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })))))));\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/atric/googleBookSearch/client/src/pages/Books.js"],"names":["React","Component","Jumbotron","API","SaveBtn","Col","Row","Container","List","ListItem","Input","FormBtn","Books","state","books","searchResults","title","author","synopsis","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","getGoogleSearch","items","saveBook","image","link","componentDidMount","render","map","book","volumeInfo","infoLink","authors","description","imageLinks","thumbnail"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport SaveBtn from \"../components/SaveBtn\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\n\r\nclass Books extends Component {\r\n  state = {\r\n    books: [],\r\n    searchResults: [],\r\n    title: \"\",\r\n    author: \"\",\r\n    synopsis: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res => this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteBook = id => {\r\n    API.deleteBook(id)\r\n      .then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const {  name, value} = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.title) {\r\n      API.getGoogleSearch(this.state.title)\r\n        .then(res =>\r\n          {this.setState({searchResults: res.data.items}, () => console.log(this.state.searchResults))\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  saveBook = (title, author, synopsis, image, link) => {\r\n    API.saveBook({\r\n      title,\r\n      author,\r\n      synopsis,\r\n      image,\r\n      link\r\n    }).then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>Find a Book</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.title}\r\n                onChange={this.handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <FormBtn>Search</FormBtn>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-6 sm-12\">\r\n          <List>\r\n          {this.state.searchResults.map(book => (\r\n            <ListItem key={book.id}>\r\n            <a href={book.volumeInfo.infoLink} alt=\"link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <strong>\r\n            {book.volumeInfo.title} by {book.volumeInfo.authors ? book.volumeInfo.authors[0]: \"No Author Available\"}\r\n            </strong>\r\n            </a>\r\n            <SaveBtn onClick={() => this.saveBook(book.volumeInfo.title, book.volumeInfo.authors, book.volumeInfo.description, book.volumeInfo.imageLinks.thumbnail, book.volumeInfo.infoLink)} />\r\n            </ListItem>\r\n            ))}\r\n          </List>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books;"]},"metadata":{},"sourceType":"module"}