{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atric\\\\googleBookSearch\\\\client\\\\src\\\\pages\\\\SavedBooks.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nclass SavedBooks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      searchResults: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\"\n    };\n\n    this.loadBooks = () => {\n      API.getBooks().then(res => this.setState({\n        books: res.data,\n        title: \"\",\n        authors: \"\",\n        description: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      API.deleteBook(id).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.title) {\n        API.getGoogle(this.state.title).then(res => {\n          this.setState({\n            searchResults: res.data.items\n          }, () => console.log(this.state.searchResults));\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.saveBook = (title, authors, synopsis, image, link) => {\n      API.saveBook({\n        title,\n        authors,\n        synopsis,\n        image,\n        link\n      }).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"My Saved Books\")), this.state.books.length ? /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, this.state.books.map(book => /*#__PURE__*/React.createElement(ListItem, {\n      key: book._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/books/\" + book._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, book.title), \" by \", book.author, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: book.image,\n      alt: \"Book\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: () => this.deleteBook(book._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default SavedBooks;","map":{"version":3,"sources":["C:/Users/atric/googleBookSearch/client/src/pages/SavedBooks.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","SavedBooks","state","books","searchResults","title","author","synopsis","loadBooks","getBooks","then","res","setState","data","authors","description","catch","err","console","log","deleteBook","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","getGoogle","items","saveBook","image","link","componentDidMount","render","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\n\r\nclass SavedBooks extends Component {\r\n  state = {\r\n    books: [],\r\n    searchResults: [],\r\n    title: \"\",\r\n    author: \"\",\r\n    synopsis: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res =>\r\n        this.setState({ books: res.data, title: \"\", authors: \"\", description: \"\" })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteBook = id => {\r\n    API.deleteBook(id)\r\n      .then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.title) {\r\n\r\n      API.getGoogle(this.state.title)\r\n        .then(res => \r\n          {this.setState({searchResults: res.data.items}, () => console.log(this.state.searchResults))\r\n\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  saveBook = (title, authors, synopsis, image, link ) => {\r\n      API.saveBook({\r\n        title,\r\n        authors,\r\n        synopsis,\r\n        image,\r\n        link\r\n      }).then(res => this.loadBooks())\r\n        .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>My Saved Books</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <Link to={\"/books/\" + book._id}>\r\n                      <strong>\r\n                        {book.title} \r\n                      </strong> by {book.author}\r\n                      <br></br>\r\n                    <br></br>\r\n                    <img src={book.image} alt=\"Book\"/>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SavedBooks;"]},"metadata":{},"sourceType":"module"}